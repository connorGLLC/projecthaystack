{"ast":null,"code":"var _jsxFileName = \"/Users/connorgannaway/git/connor-created/src/App.js\";\nimport * as React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Footer from \"./components/Footer\";\nimport Nav from \"./components/Nav\";\nimport Gallery from \"./components/pages/Gallery\";\nimport Home from \"./components/pages/Home\";\nimport ComingSoon from \"./components/pages/ComingSoon\";\nimport DarkButton from \"./components/pages/helpers/DarkMode\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport { Routes, Route } from \"react-router-dom\";\nimport { createTheme, ThemeProvider, styled } from \"@mui/material/styles\";\nimport Button from \"@mui/material/Button\";\nimport { orange } from \"@mui/material/colors\";\nimport { StayPrimaryLandscape } from \"@mui/icons-material\"; // const theme = createTheme({\n//   palette: {\n//     primary: {\n//       main: \"#FAFAFA\",\n//     },\n//     secondary: {\n//       main: \"#84FFFF\",\n//     },\n//     // Used by `getContrastText()` to maximize the contrast between\n//     // the background and the text.\n//     contrastThreshold: 3,\n//     // Used by the functions below to shift a color's luminance by approximately\n//     // two indexes within its tonal palette.\n//     // E.g., shift from Red 500 to Red 300 or Red 700.\n//     tonalOffset: 0.2,\n//   },\n// });\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ColorModeContext = /*#__PURE__*/React.createContext({\n  toggleColorMode: () => {}\n});\nexport default function App() {\n  // const colorMode = React.useContext(ColorModeContext);\n  // function ToggleColorMode() {\n  //   const [mode, setMode] = React.useState(\"light\");\n  //   const colorMode = React.useMemo(\n  //     () => ({\n  //       toggleColorMode: () => {\n  //         setMode((prevMode) => (prevMode === \"light\" ? \"dark\" : \"light\"));\n  //       },\n  //     }),\n  //     []\n  //   );\n  //   const theme = React.useMemo(\n  //     () =>\n  //       createTheme({\n  //         palette: {\n  //           mode,\n  //         },\n  //       }),\n  //     [mode]\n  //   );\n  //   return (\n  //     <ColorModeContext.Provider value={colorMode}>\n  //       <ThemeProvider theme={theme}>\n  //         <>\n  //           <Nav />\n  //           <DarkButton />\n  //           <Routes>\n  //             <Route exact path=\"gallery\" element={<Gallery />} />\n  //             {/* <Route exact path=\"footer\" element={<Footer />} /> */}\n  //             <Route exact path=\"/\" element={<Home />} />\n  //           </Routes>\n  //         </>\n  //       </ThemeProvider>\n  //     </ColorModeContext.Provider>\n  //   );\n  // }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ColorModeContext.Provider, {\n      value: colorMode,\n      children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n        theme: theme,\n        children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DarkButton, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Routes, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"gallery\",\n              element: /*#__PURE__*/_jsxDEV(Gallery, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 52\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/\",\n              element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 46\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n} // export default function App() {\n//   return (\n//     <>\n//       <ThemeProvider theme={theme}>\n//         <ComingSoon />\n//       </ThemeProvider>\n//     </>\n//   );\n// }\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/connorgannaway/git/connor-created/src/App.js"],"names":["React","Footer","Nav","Gallery","Home","ComingSoon","DarkButton","CssBaseline","Routes","Route","createTheme","ThemeProvider","styled","Button","orange","StayPrimaryLandscape","ColorModeContext","createContext","toggleColorMode","App","colorMode","theme"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;AAGA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,UAAP,MAAuB,+BAAvB;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AAEA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,kBAA9B;AACA,SAASC,WAAT,EAAsBC,aAAtB,EAAqCC,MAArC,QAAmD,sBAAnD;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,SAASC,oBAAT,QAAqC,qBAArC,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,gBAAgB,gBAAGhB,KAAK,CAACiB,aAAN,CAAoB;AAAEC,EAAAA,eAAe,EAAE,MAAM,CAAE;AAA3B,CAApB,CAAzB;AAEA,eAAe,SAASC,GAAT,GAAe;AAC5B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBACE;AAAA,2BACE,QAAC,gBAAD,CAAkB,QAAlB;AAA2B,MAAA,KAAK,EAAEC,SAAlC;AAAA,6BACE,QAAC,aAAD;AAAe,QAAA,KAAK,EAAEC,KAAtB;AAAA,gCACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAGE;AAAA,kCAEE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,kBAHF,eAKE,QAAC,MAAD;AAAA,oCACE,QAAC,KAAD;AAAO,cAAA,KAAK,MAAZ;AAAa,cAAA,IAAI,EAAC,SAAlB;AAA4B,cAAA,OAAO,eAAE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAArC;AAAA;AAAA;AAAA;AAAA,oBADF,eAGE,QAAC,KAAD;AAAO,cAAA,KAAK,MAAZ;AAAa,cAAA,IAAI,EAAC,GAAlB;AAAsB,cAAA,OAAO,eAAE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAA/B;AAAA;AAAA;AAAA;AAAA,oBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA,wBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAqBD,C,CACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;KAtEwBF,G","sourcesContent":["import * as React from \"react\";\n\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Footer from \"./components/Footer\";\nimport Nav from \"./components/Nav\";\nimport Gallery from \"./components/pages/Gallery\";\nimport Home from \"./components/pages/Home\";\nimport ComingSoon from \"./components/pages/ComingSoon\";\nimport DarkButton from \"./components/pages/helpers/DarkMode\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\n\nimport { Routes, Route } from \"react-router-dom\";\nimport { createTheme, ThemeProvider, styled } from \"@mui/material/styles\";\nimport Button from \"@mui/material/Button\";\nimport { orange } from \"@mui/material/colors\";\nimport { StayPrimaryLandscape } from \"@mui/icons-material\";\n\n// const theme = createTheme({\n//   palette: {\n//     primary: {\n//       main: \"#FAFAFA\",\n//     },\n//     secondary: {\n//       main: \"#84FFFF\",\n//     },\n//     // Used by `getContrastText()` to maximize the contrast between\n//     // the background and the text.\n//     contrastThreshold: 3,\n//     // Used by the functions below to shift a color's luminance by approximately\n//     // two indexes within its tonal palette.\n//     // E.g., shift from Red 500 to Red 300 or Red 700.\n//     tonalOffset: 0.2,\n//   },\n// });\n\nconst ColorModeContext = React.createContext({ toggleColorMode: () => {} });\n\nexport default function App() {\n  // const colorMode = React.useContext(ColorModeContext);\n\n  // function ToggleColorMode() {\n  //   const [mode, setMode] = React.useState(\"light\");\n  //   const colorMode = React.useMemo(\n  //     () => ({\n  //       toggleColorMode: () => {\n  //         setMode((prevMode) => (prevMode === \"light\" ? \"dark\" : \"light\"));\n  //       },\n  //     }),\n  //     []\n  //   );\n\n  //   const theme = React.useMemo(\n  //     () =>\n  //       createTheme({\n  //         palette: {\n  //           mode,\n  //         },\n  //       }),\n  //     [mode]\n  //   );\n\n  //   return (\n  //     <ColorModeContext.Provider value={colorMode}>\n  //       <ThemeProvider theme={theme}>\n  //         <>\n  //           <Nav />\n  //           <DarkButton />\n  //           <Routes>\n  //             <Route exact path=\"gallery\" element={<Gallery />} />\n  //             {/* <Route exact path=\"footer\" element={<Footer />} /> */}\n  //             <Route exact path=\"/\" element={<Home />} />\n  //           </Routes>\n  //         </>\n  //       </ThemeProvider>\n  //     </ColorModeContext.Provider>\n  //   );\n  // }\n  return (\n    <>\n      <ColorModeContext.Provider value={colorMode}>\n        <ThemeProvider theme={theme}>\n          <CssBaseline />\n\n          <>\n            {/* <Button variant=\"contained\">Hello World</Button> */}\n            <Nav />\n            <DarkButton />\n\n            <Routes>\n              <Route exact path=\"gallery\" element={<Gallery />} />\n              {/* <Route exact path=\"footer\" element={<Footer />} /> */}\n              <Route exact path=\"/\" element={<Home />} />\n            </Routes>\n          </>\n        </ThemeProvider>\n      </ColorModeContext.Provider>\n    </>\n  );\n}\n// export default function App() {\n//   return (\n//     <>\n//       <ThemeProvider theme={theme}>\n//         <ComingSoon />\n//       </ThemeProvider>\n//     </>\n//   );\n// }\n"]},"metadata":{},"sourceType":"module"}