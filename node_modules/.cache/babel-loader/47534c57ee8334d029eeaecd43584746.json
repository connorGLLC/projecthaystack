{"ast":null,"code":"var _jsxFileName = \"/Users/connorgannaway/gllcgit/projecthaystack/src/App.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport \"./App.css\";\nimport Nav from \"./components/Nav\";\nimport Footer from \"./components/Footer\";\nimport Gear from \"./pages/Gear\";\nimport Contact from \"./pages/Contact\";\nimport Home from \"./pages/Home\";\nimport { Routes, Route } from \"react-router-dom\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Box from \"@mui/material/Box\";\nimport { useTheme, ThemeProvider, createTheme } from \"@mui/material/styles\";\nimport Brightness4Icon from \"@mui/icons-material/Brightness4\";\nimport Brightness7Icon from \"@mui/icons-material/Brightness7\";\nimport { grey } from \"@mui/material/colors\";\nimport ScrollToTop from \"./components/ScrollToTop\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ColorModeContext = /*#__PURE__*/React.createContext({\n  toggleColorMode: () => {}\n});\nexport default function App(ScrollToTop) {\n  _s();\n\n  const [mode, setMode] = React.useState(\"light\");\n  const colorMode = React.useMemo(() => ({\n    toggleColorMode: () => {\n      setMode(prevMode => prevMode === \"light\" ? \"dark\" : \"light\");\n    }\n  }), []);\n  const theme = React.useMemo(() => createTheme({\n    palette: {\n      mode,\n      ...(mode === \"light\" ? {\n        // primary: grey,\n        // divider: grey[700],\n        // background: {\n        //   default: grey[900],\n        //   paper: grey[900],\n        // },\n        // text: {\n        //   primary: \"#fff\",\n        //   secondary: grey[500],\n        // },\n        // palette values for light mode\n        primary: {\n          light: grey[50],\n          main: \"#fff\",\n          contrastText: \"#000\"\n        },\n        divider: grey[300],\n        text: {\n          primary: grey[900],\n          secondary: grey[800]\n        }\n      } : {\n        // palette values for dark mode\n        primary: grey,\n        divider: grey[700],\n        background: {\n          default: grey[900],\n          paper: grey[900]\n        },\n        text: {\n          primary: \"#fff\",\n          secondary: grey[500]\n        }\n      })\n    },\n    typography: {\n      fontFamily: [\"Roboto\", '\"Helvetica Neue\"', '\"Segoe UI\"', \"-apple-system\", \"BlinkMacSystemFont\", \"Arial\", \"sans-serif\", '\"Apple Color Emoji\"', '\"Segoe UI Emoji\"', '\"Segoe UI Symbol\"'].join(\",\")\n    }\n  }), [mode]);\n  return /*#__PURE__*/_jsxDEV(ColorModeContext.Provider, {\n    value: colorMode,\n    children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"gear\",\n          element: /*#__PURE__*/_jsxDEV(Gear, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"rH2IxS7ra29cpeULm3TREnfglHU=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/connorgannaway/gllcgit/projecthaystack/src/App.js"],"names":["React","Nav","Footer","Gear","Contact","Home","Routes","Route","IconButton","Box","useTheme","ThemeProvider","createTheme","Brightness4Icon","Brightness7Icon","grey","ScrollToTop","ColorModeContext","createContext","toggleColorMode","App","mode","setMode","useState","colorMode","useMemo","prevMode","theme","palette","primary","light","main","contrastText","divider","text","secondary","background","default","paper","typography","fontFamily","join"],"mappings":"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","sourcesContent":["import * as React from \"react\";\n\nimport \"./App.css\";\nimport Nav from \"./components/Nav\";\nimport Footer from \"./components/Footer\";\nimport Gear from \"./pages/Gear\";\nimport Contact from \"./pages/Contact\";\nimport Home from \"./pages/Home\";\nimport { Routes, Route } from \"react-router-dom\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Box from \"@mui/material/Box\";\nimport { useTheme, ThemeProvider, createTheme } from \"@mui/material/styles\";\nimport Brightness4Icon from \"@mui/icons-material/Brightness4\";\nimport Brightness7Icon from \"@mui/icons-material/Brightness7\";\n\nimport { grey } from \"@mui/material/colors\";\n\nimport ScrollToTop from \"./components/ScrollToTop\";\n\nconst ColorModeContext = React.createContext({ toggleColorMode: () => {} });\n\nexport default function App(ScrollToTop) {\n  const [mode, setMode] = React.useState(\"light\");\n  const colorMode = React.useMemo(\n    () => ({\n      toggleColorMode: () => {\n        setMode((prevMode) => (prevMode === \"light\" ? \"dark\" : \"light\"));\n      },\n    }),\n    []\n  );\n\n  const theme = React.useMemo(\n    () =>\n      createTheme({\n        palette: {\n          mode,\n          ...(mode === \"light\"\n            ? {\n                // primary: grey,\n                // divider: grey[700],\n                // background: {\n                //   default: grey[900],\n                //   paper: grey[900],\n                // },\n                // text: {\n                //   primary: \"#fff\",\n                //   secondary: grey[500],\n                // },\n                // palette values for light mode\n                primary: {\n                  light: grey[50],\n                  main: \"#fff\",\n                  contrastText: \"#000\",\n                },\n                divider: grey[300],\n                text: {\n                  primary: grey[900],\n                  secondary: grey[800],\n                },\n              }\n            : {\n                // palette values for dark mode\n                primary: grey,\n                divider: grey[700],\n                background: {\n                  default: grey[900],\n                  paper: grey[900],\n                },\n                text: {\n                  primary: \"#fff\",\n                  secondary: grey[500],\n                },\n              }),\n        },\n        typography: {\n          fontFamily: [\n            \"Roboto\",\n            '\"Helvetica Neue\"',\n            '\"Segoe UI\"',\n            \"-apple-system\",\n            \"BlinkMacSystemFont\",\n            \"Arial\",\n            \"sans-serif\",\n            '\"Apple Color Emoji\"',\n            '\"Segoe UI Emoji\"',\n            '\"Segoe UI Symbol\"',\n          ].join(\",\"),\n        },\n      }),\n    [mode]\n  );\n\n  return (\n    <ColorModeContext.Provider value={colorMode}>\n      <ThemeProvider theme={theme}>\n        <Nav />\n        <Routes>\n          <Route exact path=\"gear\" element={<Gear />} />\n          {/* <Route exact path=\"footer\" element={<Footer />} /> */}\n          <Route exact path=\"/\" element={<Home />} />\n        </Routes>\n        <Footer />\n      </ThemeProvider>\n    </ColorModeContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}