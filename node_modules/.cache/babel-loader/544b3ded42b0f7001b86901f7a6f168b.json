{"ast":null,"code":"// import React, { useState } from \"react\";\n// import { Link } from \"react-router-dom\";\n// import {\n//   AppBar,\n//   makeStyles,\n//   Tabs,\n//   Toolbar,\n//   Tab,\n//   Typography,\n//   Button,\n//   Menu,\n//   MenuItem,\n//   useMediaQuery,\n//   useTheme,\n// } from \"@material-ui/core\";\n// import Container from \"@material-ui/core/Container\";\n// import DrawerComponent from \"./DrawerComponent/DrawerComponent\";\n// // import { GiBookAura } from \"react-icons/gi\";\n// import { MdHome } from \"react-icons/md\";\n// import { BiSpreadsheet } from \"react-icons/bi\";\n// import { GiCardboardBox } from \"react-icons/gi\";\n// import { FiTruck } from \"react-icons/fi\";\n// import { VscAccount } from \"react-icons/vsc\";\n// import { BiBody } from \"react-icons/bi\";\n// import { BiTask } from \"react-icons/bi\";\n// const useStyles = makeStyles((theme) => ({\n//   // logo: {\n//   //   fontSize: \"1.9rem\",\n//   // },\n//   account: {\n//     marginLeft: \"auto\",\n//     \"&:hover\": {\n//       background: \"purple\",\n//     },\n//   },\n//   tabsContainer: {\n//     marginLeft: \"auto\",\n//   },\n//   iconLogo: {\n//     width: \"50px\",\n//   },\n//   icons: {\n//     fontSize: \"2rem\",\n//   },\n// }));\n// const Navbar = () => {\n//   //Hooks\n//   const [value, setValue] = useState(0);\n//   const [anchorEl, setAnchorEl] = useState(null);\n//   //Boolean(anchorEl) This is use to convert a null value in to a boolean\n//   //anchorEl Is us to set the position of the menu\n//   const classes = useStyles();\n//   const theme = useTheme(); //Get a copy of our default theme in our component so that we can access the breakpoints and pass the useMediaQuery\n//   // Media query for anything under 920 px to render the hamburger\n//   const matches = useMediaQuery(theme.breakpoints.down(\"sm\"));\n//   //Functions\n//   const handleClickTab = (e, newValue) => {\n//     //The second value contains the current index\n//     setValue(newValue);\n//   };\n//   const handleOpenMenu = (e) => {\n//     setAnchorEl(e.currentTarget);\n//   };\n//   const handleCloseMenu = () => {\n//     setAnchorEl(null);\n//   };\n//   const renderNavbar = () => {\n//     return (\n//       <>\n//         {matches ? (\n//           <DrawerComponent />\n//         ) : (\n//           <>\n//             <Tabs\n//               onChange={handleClickTab}\n//               className={classes.tabsContainer}\n//               indicatorColor=\"secondary\"\n//               value={value}\n//             >\n//               {/* <Tab\n//                 component={Link}\n//                 to=\"/\"\n//                 disableRipple\n//                 icon={<img src={require(\"../../images/homeIcon.png\")} />}\n//                 label=\"Home\"\n//               /> */}\n//               <Tab\n//                 component={Link}\n//                 to=\"/admin\"\n//                 disableRipple\n//                 icon={<VscAccount className={classes.icons} />}\n//                 label=\"Profile\"\n//               />\n//               <Tab\n//                 component={Link}\n//                 to=\"/tasks\"\n//                 disableRipple\n//                 icon={<BiTask className={classes.icons} />}\n//                 label=\"Tasks\"\n//               />\n//               <Tab\n//                 component={Link}\n//                 to=\"/picking\"\n//                 disableRipple\n//                 icon={<BiSpreadsheet className={classes.icons} />}\n//                 label=\"Picking\"\n//               />\n//               {/* <Tab\n//                   component={Link}\n//                   to=\"/receiving\"\n//                   disableRipple\n//                   icon={<GiCardboardBox className={classes.icons} />}\n//                   label=\"Receiving\"\n//                 />\n//                 <Tab\n//                   component={Link}\n//                   to=\"/putaway\"\n//                   disableRipple\n//                   icon={<BiBody className={classes.icons} />}\n//                   label=\"PutAway\"\n//                 />\n//                 <Tab\n//                   component={Link}\n//                   to=\"/dispatch\"\n//                   disableRipple\n//                   icon={<FiTruck className={classes.icons} />}\n//                   label=\"Dispatch\"\n//                 /> */}\n//             </Tabs>\n//           </>\n//         )}\n//       </>\n//     );\n//   };\n//   return (\n//     <>\n//       <Container>\n//         <AppBar elevation={0} position=\"fixed\" color=\"primary\">\n//           <Toolbar>\n//             <Typography>\n//               {matches ? (\n//                 <a href=\"/\">\n//                   <img src={require(\"\")} />\n//                 </a>\n//               ) : (\n//                 \"\"\n//               )}\n//             </Typography>\n//             {renderNavbar()}\n//           </Toolbar>\n//         </AppBar>\n//       </Container>\n//     </>\n//   );\n// };\n// export default Navbar;","map":{"version":3,"sources":["/Users/connorgannaway/git/connor-created/src/components/NavBar/Navbar.js"],"names":[],"mappingssourcesContent":["// import React, { useState } from \"react\";\n// import { Link } from \"react-router-dom\";\n// import {\n//   AppBar,\n//   makeStyles,\n//   Tabs,\n//   Toolbar,\n//   Tab,\n//   Typography,\n//   Button,\n//   Menu,\n//   MenuItem,\n//   useMediaQuery,\n//   useTheme,\n// } from \"@material-ui/core\";\n// import Container from \"@material-ui/core/Container\";\n\n// import DrawerComponent from \"./DrawerComponent/DrawerComponent\";\n// // import { GiBookAura } from \"react-icons/gi\";\n// import { MdHome } from \"react-icons/md\";\n// import { BiSpreadsheet } from \"react-icons/bi\";\n// import { GiCardboardBox } from \"react-icons/gi\";\n// import { FiTruck } from \"react-icons/fi\";\n// import { VscAccount } from \"react-icons/vsc\";\n// import { BiBody } from \"react-icons/bi\";\n// import { BiTask } from \"react-icons/bi\";\n\n// const useStyles = makeStyles((theme) => ({\n//   // logo: {\n//   //   fontSize: \"1.9rem\",\n//   // },\n//   account: {\n//     marginLeft: \"auto\",\n//     \"&:hover\": {\n//       background: \"purple\",\n//     },\n//   },\n//   tabsContainer: {\n//     marginLeft: \"auto\",\n//   },\n//   iconLogo: {\n//     width: \"50px\",\n//   },\n//   icons: {\n//     fontSize: \"2rem\",\n//   },\n// }));\n\n// const Navbar = () => {\n//   //Hooks\n//   const [value, setValue] = useState(0);\n//   const [anchorEl, setAnchorEl] = useState(null);\n//   //Boolean(anchorEl) This is use to convert a null value in to a boolean\n//   //anchorEl Is us to set the position of the menu\n\n//   const classes = useStyles();\n\n//   const theme = useTheme(); //Get a copy of our default theme in our component so that we can access the breakpoints and pass the useMediaQuery\n\n//   // Media query for anything under 920 px to render the hamburger\n//   const matches = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n//   //Functions\n//   const handleClickTab = (e, newValue) => {\n//     //The second value contains the current index\n//     setValue(newValue);\n//   };\n\n//   const handleOpenMenu = (e) => {\n//     setAnchorEl(e.currentTarget);\n//   };\n//   const handleCloseMenu = () => {\n//     setAnchorEl(null);\n//   };\n\n//   const renderNavbar = () => {\n//     return (\n//       <>\n//         {matches ? (\n//           <DrawerComponent />\n//         ) : (\n//           <>\n//             <Tabs\n//               onChange={handleClickTab}\n//               className={classes.tabsContainer}\n//               indicatorColor=\"secondary\"\n//               value={value}\n//             >\n//               {/* <Tab\n//                 component={Link}\n//                 to=\"/\"\n//                 disableRipple\n//                 icon={<img src={require(\"../../images/homeIcon.png\")} />}\n//                 label=\"Home\"\n//               /> */}\n//               <Tab\n//                 component={Link}\n//                 to=\"/admin\"\n//                 disableRipple\n//                 icon={<VscAccount className={classes.icons} />}\n//                 label=\"Profile\"\n//               />\n//               <Tab\n//                 component={Link}\n//                 to=\"/tasks\"\n//                 disableRipple\n//                 icon={<BiTask className={classes.icons} />}\n//                 label=\"Tasks\"\n//               />\n//               <Tab\n//                 component={Link}\n//                 to=\"/picking\"\n//                 disableRipple\n//                 icon={<BiSpreadsheet className={classes.icons} />}\n//                 label=\"Picking\"\n//               />\n//               {/* <Tab\n//                   component={Link}\n//                   to=\"/receiving\"\n//                   disableRipple\n//                   icon={<GiCardboardBox className={classes.icons} />}\n//                   label=\"Receiving\"\n//                 />\n\n//                 <Tab\n//                   component={Link}\n//                   to=\"/putaway\"\n//                   disableRipple\n//                   icon={<BiBody className={classes.icons} />}\n//                   label=\"PutAway\"\n//                 />\n\n//                 <Tab\n//                   component={Link}\n//                   to=\"/dispatch\"\n//                   disableRipple\n//                   icon={<FiTruck className={classes.icons} />}\n//                   label=\"Dispatch\"\n//                 /> */}\n//             </Tabs>\n//           </>\n//         )}\n//       </>\n//     );\n//   };\n\n//   return (\n//     <>\n//       <Container>\n//         <AppBar elevation={0} position=\"fixed\" color=\"primary\">\n//           <Toolbar>\n//             <Typography>\n//               {matches ? (\n//                 <a href=\"/\">\n//                   <img src={require(\"\")} />\n//                 </a>\n//               ) : (\n//                 \"\"\n//               )}\n//             </Typography>\n//             {renderNavbar()}\n//           </Toolbar>\n//         </AppBar>\n//       </Container>\n//     </>\n//   );\n// };\n\n// export default Navbar;\n"]},"metadata":{},"sourceType":"module"}