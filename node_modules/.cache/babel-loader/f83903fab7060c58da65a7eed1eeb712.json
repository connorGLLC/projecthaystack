{"ast":null,"code":"var _jsxFileName = \"/Users/connorgannaway/git/connor-created/src/App.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Footer from \"./components/Footer\";\nimport Nav from \"./components/Nav\";\nimport Gallery from \"./components/pages/Gallery\";\nimport Home from \"./components/pages/Home\";\nimport ComingSoon from \"./components/pages/ComingSoon\";\nimport DarkButton from \"./components/pages/helpers/DarkMode\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport { Routes, Route } from \"react-router-dom\";\nimport { createTheme, ThemeProvider, styled } from \"@mui/material/styles\";\nimport Button from \"@mui/material/Button\";\nimport { orange } from \"@mui/material/colors\";\nimport { StayPrimaryLandscape } from \"@mui/icons-material\"; // const theme = createTheme({\n//   palette: {\n//     primary: {\n//       main: \"#FAFAFA\",\n//     },\n//     secondary: {\n//       main: \"#84FFFF\",\n//     },\n//     // Used by `getContrastText()` to maximize the contrast between\n//     // the background and the text.\n//     contrastThreshold: 3,\n//     // Used by the functions below to shift a color's luminance by approximately\n//     // two indexes within its tonal palette.\n//     // E.g., shift from Red 500 to Red 300 or Red 700.\n//     tonalOffset: 0.2,\n//   },\n// });\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ColorModeContext = /*#__PURE__*/React.createContext({\n  toggleColorMode: () => {}\n});\nconst colorMode = React.useContext(ColorModeContext);\nexport default function App() {\n  _s();\n\n  const [mode, setMode] = React.useState(\"light\");\n  const colorMode = React.useMemo(() => ({\n    toggleColorMode: () => {\n      setMode(prevMode => prevMode === \"light\" ? \"dark\" : \"light\");\n    }\n  }), []);\n  const theme = React.useMemo(() => createTheme({\n    palette: {\n      mode\n    }\n  }), [mode]);\n  return /*#__PURE__*/_jsxDEV(ColorModeContext.Provider, {\n    value: colorMode,\n    children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DarkButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"gallery\",\n            element: /*#__PURE__*/_jsxDEV(Gallery, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 50\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 44\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n} // return (\n//   <>\n//     <ThemeProvider theme={theme}>\n//       <CssBaseline />\n//       <>\n//         {/* <Button variant=\"contained\">Hello World</Button> */}\n//         <Nav />\n//         <DarkButton />\n//         <Routes>\n//           <Route exact path=\"gallery\" element={<Gallery />} />\n//           {/* <Route exact path=\"footer\" element={<Footer />} /> */}\n//           <Route exact path=\"/\" element={<Home />} />\n//         </Routes>\n//       </>\n//     </ThemeProvider>\n//   </>\n// );\n// export default function App() {\n//   return (\n//     <>\n//       <ThemeProvider theme={theme}>\n//         <ComingSoon />\n//       </ThemeProvider>\n//     </>\n//   );\n// }\n\n_s(App, \"rH2IxS7ra29cpeULm3TREnfglHU=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/connorgannaway/git/connor-created/src/App.js"],"names":["React","Footer","Nav","Gallery","Home","ComingSoon","DarkButton","CssBaseline","Routes","Route","createTheme","ThemeProvider","styled","Button","orange","StayPrimaryLandscape","ColorModeContext","createContext","toggleColorMode","colorMode","useContext","App","mode","setMode","useState","useMemo","prevMode","theme","palette"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;AAGA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,UAAP,MAAuB,+BAAvB;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AAEA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,kBAA9B;AACA,SAASC,WAAT,EAAsBC,aAAtB,EAAqCC,MAArC,QAAmD,sBAAnD;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,SAASC,oBAAT,QAAqC,qBAArC,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,gBAAgB,gBAAGhB,KAAK,CAACiB,aAAN,CAAoB;AAAEC,EAAAA,eAAe,EAAE,MAAM,CAAE;AAA3B,CAApB,CAAzB;AAEA,MAAMC,SAAS,GAAGnB,KAAK,CAACoB,UAAN,CAAiBJ,gBAAjB,CAAlB;AAEA,eAAe,SAASK,GAAT,GAAe;AAAA;;AAC5B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBvB,KAAK,CAACwB,QAAN,CAAe,OAAf,CAAxB;AACA,QAAML,SAAS,GAAGnB,KAAK,CAACyB,OAAN,CAChB,OAAO;AACLP,IAAAA,eAAe,EAAE,MAAM;AACrBK,MAAAA,OAAO,CAAEG,QAAD,IAAeA,QAAQ,KAAK,OAAb,GAAuB,MAAvB,GAAgC,OAAhD,CAAP;AACD;AAHI,GAAP,CADgB,EAMhB,EANgB,CAAlB;AASA,QAAMC,KAAK,GAAG3B,KAAK,CAACyB,OAAN,CACZ,MACEf,WAAW,CAAC;AACVkB,IAAAA,OAAO,EAAE;AACPN,MAAAA;AADO;AADC,GAAD,CAFD,EAOZ,CAACA,IAAD,CAPY,CAAd;AAUA,sBACE,QAAC,gBAAD,CAAkB,QAAlB;AAA2B,IAAA,KAAK,EAAEH,SAAlC;AAAA,2BACE,QAAC,aAAD;AAAe,MAAA,KAAK,EAAEQ,KAAtB;AAAA,6BACE;AAAA,gCACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,MAAD;AAAA,kCACE,QAAC,KAAD;AAAO,YAAA,KAAK,MAAZ;AAAa,YAAA,IAAI,EAAC,SAAlB;AAA4B,YAAA,OAAO,eAAE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAArC;AAAA;AAAA;AAAA;AAAA,kBADF,eAGE,QAAC,KAAD;AAAO,YAAA,KAAK,MAAZ;AAAa,YAAA,IAAI,EAAC,GAAlB;AAAsB,YAAA,OAAO,eAAE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAA/B;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,C,CACD;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;GAjEwBN,G;;KAAAA,G","sourcesContent":["import * as React from \"react\";\n\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Footer from \"./components/Footer\";\nimport Nav from \"./components/Nav\";\nimport Gallery from \"./components/pages/Gallery\";\nimport Home from \"./components/pages/Home\";\nimport ComingSoon from \"./components/pages/ComingSoon\";\nimport DarkButton from \"./components/pages/helpers/DarkMode\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\n\nimport { Routes, Route } from \"react-router-dom\";\nimport { createTheme, ThemeProvider, styled } from \"@mui/material/styles\";\nimport Button from \"@mui/material/Button\";\nimport { orange } from \"@mui/material/colors\";\nimport { StayPrimaryLandscape } from \"@mui/icons-material\";\n\n// const theme = createTheme({\n//   palette: {\n//     primary: {\n//       main: \"#FAFAFA\",\n//     },\n//     secondary: {\n//       main: \"#84FFFF\",\n//     },\n//     // Used by `getContrastText()` to maximize the contrast between\n//     // the background and the text.\n//     contrastThreshold: 3,\n//     // Used by the functions below to shift a color's luminance by approximately\n//     // two indexes within its tonal palette.\n//     // E.g., shift from Red 500 to Red 300 or Red 700.\n//     tonalOffset: 0.2,\n//   },\n// });\n\nconst ColorModeContext = React.createContext({ toggleColorMode: () => {} });\n\nconst colorMode = React.useContext(ColorModeContext);\n\nexport default function App() {\n  const [mode, setMode] = React.useState(\"light\");\n  const colorMode = React.useMemo(\n    () => ({\n      toggleColorMode: () => {\n        setMode((prevMode) => (prevMode === \"light\" ? \"dark\" : \"light\"));\n      },\n    }),\n    []\n  );\n\n  const theme = React.useMemo(\n    () =>\n      createTheme({\n        palette: {\n          mode,\n        },\n      }),\n    [mode]\n  );\n\n  return (\n    <ColorModeContext.Provider value={colorMode}>\n      <ThemeProvider theme={theme}>\n        <>\n          <Nav />\n          <DarkButton />\n          <Routes>\n            <Route exact path=\"gallery\" element={<Gallery />} />\n            {/* <Route exact path=\"footer\" element={<Footer />} /> */}\n            <Route exact path=\"/\" element={<Home />} />\n          </Routes>\n        </>\n      </ThemeProvider>\n    </ColorModeContext.Provider>\n  );\n}\n// return (\n//   <>\n//     <ThemeProvider theme={theme}>\n//       <CssBaseline />\n\n//       <>\n//         {/* <Button variant=\"contained\">Hello World</Button> */}\n//         <Nav />\n//         <DarkButton />\n\n//         <Routes>\n//           <Route exact path=\"gallery\" element={<Gallery />} />\n//           {/* <Route exact path=\"footer\" element={<Footer />} /> */}\n//           <Route exact path=\"/\" element={<Home />} />\n//         </Routes>\n//       </>\n//     </ThemeProvider>\n//   </>\n// );\n\n// export default function App() {\n//   return (\n//     <>\n//       <ThemeProvider theme={theme}>\n//         <ComingSoon />\n//       </ThemeProvider>\n//     </>\n//   );\n// }\n"]},"metadata":{},"sourceType":"module"}